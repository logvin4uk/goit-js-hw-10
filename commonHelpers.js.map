{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport flatpickr from 'flatpickr';\n\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Функція для додавання нуля, якщо число менше двох символів\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nlet userSelectedDate = null;\n\n// Функція для оновлення інтерфейсу таймера\nfunction updateTimerDisplay(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds').textContent = addLeadingZero(seconds);\n}\n\n// Функція для старту таймера\nfunction startTimer() {\n  const currentDate = new Date();\n  const difference = userSelectedDate - currentDate;\n\n  if (difference <= 0) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n    });\n\n    return;\n  }\n\n  // Оновлення інтерфейсу перед початком відліку\n  updateTimerDisplay(0);\n\n  // Старт таймера з оновленням кожну секунду\n  const intervalId = setInterval(() => {\n    const currentDate = new Date();\n    const difference = userSelectedDate - currentDate;\n\n    // Оновлення інтерфейсу\n    updateTimerDisplay(difference);\n\n    // Перевірка на закінчення таймера\n    if (difference <= 0) {\n      clearInterval(intervalId);\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown finished!',\n      });\n\n      // Робимо кнопку та поле неактивними після закінчення таймера\n      const startButton = document.querySelector('[data-start]');\n      const dateTimePicker = document.getElementById('datetime-picker');\n      startButton.disabled = true;\n      dateTimePicker.disabled = true;\n\n      // Повертаємо поле вводу та кнопку знову активними\n      // startButton.disabled = false;\n      // dateTimePicker.disabled = false;\n\n      // Повернення таймера в початкове положення\n      updateTimerDisplay(0);\n    }\n  }, 1000);\n}\n// Ініціалізація flatpickr\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose: function (selectedDates) {\n    // Отримуємо обрану користувачем дату\n    userSelectedDate = selectedDates[0];\n\n    const currentDate = new Date();\n    const difference = userSelectedDate - currentDate;\n\n    // Перевірка чи дата в майбутньому\n    if (difference <= 0) {\n      // Дата в минулому, робимо кнопку неактивною\n      document.querySelector('[data-start]').disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      // Дата в майбутньому, робимо кнопку активною\n      document.querySelector('[data-start]').disabled = false;\n    }\n  },\n});\n\n// Обробник події кліку на кнопку \"Start\"\ndocument.querySelector('[data-start]').addEventListener('click', startTimer);\n"],"names":["convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","userSelectedDate","updateTimerDisplay","startTimer","iziToast","intervalId","difference","startButton","dateTimePicker","flatpickr","selectedDates"],"mappings":"6vBAOA,SAASA,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,IAAIC,EAAmB,KAGvB,SAASC,EAAmBR,EAAI,CAC9B,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EACtD,SAAS,cAAc,aAAa,EAAE,YAAcK,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,EACxB,SAAS,cAAc,eAAe,EAAE,YAAcE,EAAeD,CAAO,CAC9E,CAGA,SAASK,GAAa,CAIpB,GAFmBF,EADC,IAAI,MAGN,EAAG,CACnBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,EAED,MACD,CAGDF,EAAmB,CAAC,EAGpB,MAAMG,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAaL,EADC,IAAI,KAOxB,GAHAC,EAAmBI,CAAU,EAGzBA,GAAc,EAAG,CACnB,cAAcD,CAAU,EACxBD,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qBACjB,CAAO,EAGD,MAAMG,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,eAAe,iBAAiB,EAChED,EAAY,SAAW,GACvBC,EAAe,SAAW,GAO1BN,EAAmB,CAAC,CACrB,CACF,EAAE,GAAI,CACT,CAEAO,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAS,SAAUC,EAAe,CAEhCT,EAAmBS,EAAc,CAAC,EAGfT,EADC,IAAI,MAIN,GAEhB,SAAS,cAAc,cAAc,EAAE,SAAW,GAClDG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,GAGD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,CAAC,EAGD,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAASD,CAAU"}